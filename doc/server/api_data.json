[  {    "type": "get",    "url": "/feed/:user",    "title": "Get a feed for a user",    "name": "GetFeed",    "group": "ApiFeeds",    "version": "1.0.0",    "description": "<p>Retrieves a set of feed items for a specific user</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "user",            "description": "<p>the guid of the user</p> "          }        ]      }    },    "filename": "./server/index.js",    "groupTitle": "Feeds",    "groupDescription": "<p>This is a collection of methods that allow you to retrieve the news feed for a user.</p> ",    "success": {      "examples": [        {          "title": "HTTP1.1 200 Success",          "content": "HTTP1.1 200 Success\n{\n  \"feed\": [\n    {\n      \"like\": \"e9cca9a0-7551-4a91-a1b0-51f9218c89d1\",\n      \"item\": \"http%3A%2F%2Fgithub.com\",\n      \"user\": {\n        \"user\": \"3dee9e50-4d62-44ca-97c0-5c22cf56216c\",\n        \"username\": \"cliftonc\",\n        \"altid\": \"1\",\n        \"userdata\": {\n          \"avatar\": \"test.jpg\"\n        }\n      },\n      \"since\": \"2015-09-05T12:52:25.296Z\",\n      \"visibility\": \"public\",\n      \"_item\": \"e9cca9a0-7551-4a91-a1b0-51f9218c89d1\",\n      \"type\": \"like\",\n      \"timeuuid\": \"f4f77513-53cc-11e5-97ba-830ad0811db6\",\n      \"date\": \"2015-09-05T12:52:25.296Z\",\n      \"fromNow\": \"a few seconds ago\",\n      \"isPrivate\": false,\n      \"isPersonal\": false,\n      \"isPublic\": true,\n      \"fromSomeoneYouFollow\": false,\n      \"isLike\": true,\n      \"isPost\": false,\n      \"isFollow\": false,\n      \"isFriend\": false,\n      \"isUsersItem\": true,\n      \"isFollower\": false\n    },\n    {\n      \"post\": \"88c1de8e-143d-4995-ada3-bd106cba1547\",\n      \"content\": \"CHANGED AGAIN!\",\n      \"content_type\": \"text/html\",\n      \"user\": {\n        \"user\": \"3dee9e50-4d62-44ca-97c0-5c22cf56216c\",\n        \"username\": \"cliftonc\",\n        \"altid\": \"1\",\n        \"userdata\": {\n          \"avatar\": \"test.jpg\"\n        }\n      },\n      \"posted\": \"2015-09-05T12:52:25.030Z\",\n      \"visibility\": \"public\",\n      \"altid\": \"ALTID\",\n      \"_item\": \"88c1de8e-143d-4995-ada3-bd106cba1547\",\n      \"type\": \"post\",\n      \"timeuuid\": \"f4cede6d-53cc-11e5-ab79-b1144c585b64\",\n      \"date\": \"2015-09-05T12:52:25.030Z\",\n      \"fromNow\": \"a few seconds ago\",\n      \"isPrivate\": false,\n      \"isPersonal\": false,\n      \"isPublic\": true,\n      \"fromSomeoneYouFollow\": false,\n      \"isLike\": false,\n      \"isPost\": true,\n      \"isFollow\": false,\n      \"isFriend\": false,\n      \"isUsersItem\": true,\n      \"isFollower\": false\n    },\n    {\n      \"follow\": \"57f8a82c-1a24-46ef-a670-ee086115e6ed\",\n      \"user\": {\n        \"user\": \"3dee9e50-4d62-44ca-97c0-5c22cf56216c\",\n        \"username\": \"cliftonc\",\n        \"altid\": \"1\",\n        \"userdata\": {\n          \"avatar\": \"test.jpg\"\n        }\n      },\n      \"user_follower\": {\n        \"user\": \"97cbd3c8-9adb-4dbc-86e5-e10c33db10c9\",\n        \"username\": \"ted\",\n        \"altid\": \"3\",\n        \"userdata\": {\n          \"avatar\": \"test.jpg\"\n        }\n      },\n      \"since\": \"2015-09-05T12:52:24.857Z\",\n      \"visibility\": \"public\",\n      \"_item\": \"57f8a82c-1a24-46ef-a670-ee086115e6ed\",\n      \"type\": \"follow\",\n      \"timeuuid\": \"f4b5d827-53cc-11e5-88f8-d650689effbf\",\n      \"date\": \"2015-09-05T12:52:24.866Z\",\n      \"fromNow\": \"a few seconds ago\",\n      \"isPrivate\": false,\n      \"isPersonal\": false,\n      \"isPublic\": true,\n      \"fromSomeoneYouFollow\": false,\n      \"isLike\": false,\n      \"isPost\": false,\n      \"isFollow\": true,\n      \"isFriend\": false,\n      \"isUsersItem\": true,\n      \"isFollower\": false\n    },\n    {\n      \"follow\": \"9b1c9482-0fdc-4bc7-9663-a5616c8afead\",\n      \"user\": {\n        \"user\": \"3dee9e50-4d62-44ca-97c0-5c22cf56216c\",\n        \"username\": \"cliftonc\",\n        \"altid\": \"1\",\n        \"userdata\": {\n          \"avatar\": \"test.jpg\"\n        }\n      },\n      \"user_follower\": {\n        \"user\": \"1a63823e-0818-4850-bd3e-7ef76f9a053d\",\n        \"username\": \"phteven\",\n        \"altid\": \"2\",\n        \"userdata\": {\n          \"avatar\": \"test.jpg\"\n        }\n      },\n      \"since\": \"2015-09-05T12:52:24.810Z\",\n      \"visibility\": \"public\",\n      \"_item\": \"9b1c9482-0fdc-4bc7-9663-a5616c8afead\",\n      \"type\": \"follow\",\n      \"timeuuid\": \"f4afbda5-53cc-11e5-817e-8aeeaf98f4b1\",\n      \"date\": \"2015-09-05T12:52:24.826Z\",\n      \"fromNow\": \"a few seconds ago\",\n      \"isPrivate\": false,\n      \"isPersonal\": false,\n      \"isPublic\": true,\n      \"fromSomeoneYouFollow\": false,\n      \"isLike\": false,\n      \"isPost\": false,\n      \"isFollow\": true,\n      \"isFriend\": false,\n      \"isUsersItem\": true,\n      \"isFollower\": false\n    },\n    {\n      \"friend\": \"1bc50328-99d5-44dd-be9d-0d22fc4db3d5\",\n      \"user\": {\n        \"user\": \"3dee9e50-4d62-44ca-97c0-5c22cf56216c\",\n        \"username\": \"cliftonc\",\n        \"altid\": \"1\",\n        \"userdata\": {\n          \"avatar\": \"test.jpg\"\n        }\n      },\n      \"user_friend\": {\n        \"user\": \"1a63823e-0818-4850-bd3e-7ef76f9a053d\",\n        \"username\": \"phteven\",\n        \"altid\": \"2\",\n        \"userdata\": {\n          \"avatar\": \"test.jpg\"\n        }\n      },\n      \"since\": \"2015-09-05T12:52:24.604Z\",\n      \"visibility\": \"personal\",\n      \"_item\": \"1bc50328-99d5-44dd-be9d-0d22fc4db3d5\",\n      \"type\": \"friend\",\n      \"timeuuid\": \"f48dddc1-53cc-11e5-9c8e-65db57163ca9\",\n      \"date\": \"2015-09-05T12:52:24.604Z\",\n      \"fromNow\": \"a few seconds ago\",\n      \"isPrivate\": false,\n      \"isPersonal\": true,\n      \"isPublic\": false,\n      \"fromSomeoneYouFollow\": false,\n      \"isLike\": false,\n      \"isPost\": false,\n      \"isFollow\": false,\n      \"isFriend\": true,\n      \"isUsersItem\": true,\n      \"isFollower\": false\n    },\n    {\n      \"post\": \"8519f2df-9d7a-4114-9c32-188cb3d26d1e\",\n      \"content\": \"Hello, this is a private post\",\n      \"content_type\": \"text/html\",\n      \"user\": {\n        \"user\": \"3dee9e50-4d62-44ca-97c0-5c22cf56216c\",\n        \"username\": \"cliftonc\",\n        \"altid\": \"1\",\n        \"userdata\": {\n          \"avatar\": \"test.jpg\"\n        }\n      },\n      \"posted\": \"2010-07-28T06:01:00.145Z\",\n      \"visibility\": \"private\",\n      \"altid\": null,\n      \"_item\": \"8519f2df-9d7a-4114-9c32-188cb3d26d1e\",\n      \"type\": \"post\",\n      \"timeuuid\": \"7f10961e-9a0d-11df-b984-b653fc713e01\",\n      \"date\": \"2010-07-28T06:01:00.145Z\",\n      \"fromNow\": \"5 years ago\",\n      \"isPrivate\": true,\n      \"isPersonal\": false,\n      \"isPublic\": false,\n      \"fromSomeoneYouFollow\": false,\n      \"isLike\": false,\n      \"isPost\": true,\n      \"isFollow\": false,\n      \"isFriend\": false,\n      \"isUsersItem\": true,\n      \"isFollower\": false\n    }\n  ],\n  \"more\": null\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "4xx": [          {            "group": "4xx",            "optional": false,            "field": "NotFoundError",            "description": "<p>The user was not found.</p> "          }        ],        "5xx": [          {            "group": "5xx",            "optional": false,            "field": "ServerError",            "description": "<p>There was a server problem.</p> "          }        ]      },      "examples": [        {          "title": "Not-Found:",          "content": "HTTP/1.1 404 Not Found\n{\n  'code': 'NotFoundError',\n  'message': 'Could not find that user.'\n}",          "type": "json"        },        {          "title": "Server-Error:",          "content": "HTTP/1.1 500 Server Error\n{\n  'code': 'NotFoundError',\n  'message': 'Something specific about the server error'\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/feed/:user/direct",    "title": "Get a direct feed for a user",    "name": "GetFeedDirect",    "group": "ApiFeeds",    "version": "1.0.0",    "description": "<p>Retrieves a set of feed items for a specific user that are directly posted to their feed, so not including items that come via follows or mentions.</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "user",            "description": "<p>the guid of the user</p> "          }        ]      }    },    "filename": "./server/index.js",    "groupTitle": "Feeds",    "groupDescription": "<p>This is a collection of methods that allow you to retrieve the news feed for a user.</p> ",    "success": {      "examples": [        {          "title": "HTTP1.1 200 Success",          "content": "HTTP1.1 200 Success\n[\n  {\n    \"follow\": \"9b1c9482-0fdc-4bc7-9663-a5616c8afead\",\n    \"user\": {\n      \"user\": \"3dee9e50-4d62-44ca-97c0-5c22cf56216c\",\n      \"username\": \"cliftonc\",\n      \"altid\": \"1\",\n      \"userdata\": {\n        \"avatar\": \"test.jpg\"\n      }\n    },\n    \"user_follower\": {\n      \"user\": \"1a63823e-0818-4850-bd3e-7ef76f9a053d\",\n      \"username\": \"phteven\",\n      \"altid\": \"2\",\n      \"userdata\": {\n        \"avatar\": \"test.jpg\"\n      }\n    },\n    \"since\": \"2015-09-05T12:52:24.810Z\",\n    \"visibility\": \"public\",\n    \"_item\": \"9b1c9482-0fdc-4bc7-9663-a5616c8afead\",\n    \"type\": \"follow\",\n    \"timeuuid\": \"f4b032d6-53cc-11e5-b03b-b3d71c3d6832\",\n    \"date\": \"2015-09-05T12:52:24.829Z\",\n    \"fromNow\": \"a few seconds ago\",\n    \"isPrivate\": false,\n    \"isPersonal\": false,\n    \"isPublic\": true,\n    \"fromSomeoneYouFollow\": true,\n    \"isLike\": false,\n    \"isPost\": false,\n    \"isFollow\": true,\n    \"isFriend\": false,\n    \"isUsersItem\": true,\n    \"isFollower\": false\n  },\n  {\n    \"friend\": \"54f9e7a9-282a-41cf-96e1-70ebc80a574a\",\n    \"user\": {\n      \"user\": \"1a63823e-0818-4850-bd3e-7ef76f9a053d\",\n      \"username\": \"phteven\",\n      \"altid\": \"2\",\n      \"userdata\": {\n        \"avatar\": \"test.jpg\"\n      }\n    },\n    \"user_friend\": {\n      \"user\": \"3dee9e50-4d62-44ca-97c0-5c22cf56216c\",\n      \"username\": \"cliftonc\",\n      \"altid\": \"1\",\n      \"userdata\": {\n        \"avatar\": \"test.jpg\"\n      }\n    },\n    \"since\": \"2015-09-05T12:52:24.604Z\",\n    \"visibility\": \"personal\",\n    \"_item\": \"54f9e7a9-282a-41cf-96e1-70ebc80a574a\",\n    \"type\": \"friend\",\n    \"timeuuid\": \"f48dddc2-53cc-11e5-b3ff-d5d0425b6a3a\",\n    \"date\": \"2015-09-05T12:52:24.604Z\",\n    \"fromNow\": \"a few seconds ago\",\n    \"isPrivate\": false,\n    \"isPersonal\": true,\n    \"isPublic\": false,\n    \"fromSomeoneYouFollow\": false,\n    \"isLike\": false,\n    \"isPost\": false,\n    \"isFollow\": false,\n    \"isFriend\": true,\n    \"isUsersItem\": false,\n    \"isFollower\": false\n  }\n]",          "type": "json"        }      ]    },    "error": {      "fields": {        "4xx": [          {            "group": "4xx",            "optional": false,            "field": "NotFoundError",            "description": "<p>The user was not found.</p> "          }        ],        "5xx": [          {            "group": "5xx",            "optional": false,            "field": "ServerError",            "description": "<p>There was a server problem.</p> "          }        ]      },      "examples": [        {          "title": "Not-Found:",          "content": "HTTP/1.1 404 Not Found\n{\n  'code': 'NotFoundError',\n  'message': 'Could not find that user.'\n}",          "type": "json"        },        {          "title": "Server-Error:",          "content": "HTTP/1.1 500 Server Error\n{\n  'code': 'NotFoundError',\n  'message': 'Something specific about the server error'\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/follow",    "title": "Add a follower to a user",    "name": "AddFollower",    "group": "ApiFollowers",    "version": "1.0.0",    "description": "<p>Adds a new friend to a user account.</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Guid</p> ",            "optional": false,            "field": "user",            "description": "<p>the guid representation of the user who will be followed</p> "          },          {            "group": "Parameter",            "type": "<p>Guid</p> ",            "optional": false,            "field": "user_follower",            "description": "<p>the guid of the user who will be the follower</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "visibility",            "description": "<p>visibility level</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "backfill",            "description": "<p>amount of time to backfill posts from the user followed - e.g. 1d</p> "          }        ]      }    },    "filename": "./server/index.js",    "groupTitle": "Followers",    "groupDescription": "<p>This is a collection of methods that allow you to create and retrieve follows.</p> ",    "success": {      "examples": [        {          "title": "HTTP1.1 200 Success",          "content": "HTTP1.1 200 Success\n{\n  \"follow\": \"9b1c9482-0fdc-4bc7-9663-a5616c8afead\",\n  \"user\": {\n    \"user\": \"3dee9e50-4d62-44ca-97c0-5c22cf56216c\",\n    \"username\": \"cliftonc\",\n    \"altid\": \"1\",\n    \"userdata\": {\n      \"avatar\": \"test.jpg\"\n    }\n  },\n  \"user_follower\": {\n    \"user\": \"1a63823e-0818-4850-bd3e-7ef76f9a053d\",\n    \"username\": \"phteven\",\n    \"altid\": \"2\",\n    \"userdata\": {\n      \"avatar\": \"test.jpg\"\n    }\n  },\n  \"since\": \"2015-09-05T12:52:24.810Z\",\n  \"visibility\": \"public\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "4xx": [          {            "group": "4xx",            "optional": false,            "field": "BadRequestError",            "description": "<p>You did not provide a username</p> "          }        ],        "5xx": [          {            "group": "5xx",            "optional": false,            "field": "ServerError",            "description": "<p>There was a server problem.</p> "          }        ]      },      "examples": [        {          "title": "Bad-Request:",          "content": "HTTP/1.1 400 Bad Request\n{\n  'code': 'BadRequestError',\n  'message': 'You must provide a username.'\n}",          "type": "json"        },        {          "title": "Bad-Request:",          "content": "HTTP/1.1 400 Bad Request\n{\n  'code': 'BadRequestError',\n  'message': 'You must provide a follow guid.'\n}",          "type": "json"        },        {          "title": "Server-Error:",          "content": "HTTP/1.1 500 Server Error\n{\n  'code': 'NotFoundError',\n  'message': 'Something specific about the server error'\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/followers/:follow",    "title": "Get follow details",    "name": "GetFollower",    "group": "ApiFollowers",    "version": "1.0.0",    "description": "<p>Retrieves details of a specific follow</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Guid</p> ",            "optional": false,            "field": "follow",            "description": "<p>the guid of a specific follow</p> "          }        ]      }    },    "filename": "./server/index.js",    "groupTitle": "Followers",    "groupDescription": "<p>This is a collection of methods that allow you to create and retrieve follows.</p> ",    "success": {      "examples": [        {          "title": "HTTP1.1 200 Success",          "content": "HTTP1.1 200 Success\n{\n  \"follow\": \"9b1c9482-0fdc-4bc7-9663-a5616c8afead\",\n  \"user\": {\n    \"user\": \"3dee9e50-4d62-44ca-97c0-5c22cf56216c\",\n    \"username\": \"cliftonc\",\n    \"altid\": \"1\",\n    \"userdata\": {\n      \"avatar\": \"test.jpg\"\n    }\n  },\n  \"user_follower\": {\n    \"user\": \"1a63823e-0818-4850-bd3e-7ef76f9a053d\",\n    \"username\": \"phteven\",\n    \"altid\": \"2\",\n    \"userdata\": {\n      \"avatar\": \"test.jpg\"\n    }\n  },\n  \"since\": \"2015-09-05T12:52:24.810Z\",\n  \"visibility\": \"public\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "5xx": [          {            "group": "5xx",            "optional": false,            "field": "ServerError",            "description": "<p>There was a server problem.</p> "          }        ]      },      "examples": [        {          "title": "Server-Error:",          "content": "HTTP/1.1 500 Server Error\n{\n  'code': 'NotFoundError',\n  'message': 'Something specific about the server error'\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/user/:user/followers",    "title": "Get followers for a user",    "name": "GetFollowers",    "group": "ApiFollowers",    "version": "1.0.0",    "description": "<p>Retrieves a set of feed items for a specific user</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "username",            "description": "<p>the username of the user</p> "          }        ]      }    },    "filename": "./server/index.js",    "groupTitle": "Followers",    "groupDescription": "<p>This is a collection of methods that allow you to create and retrieve follows.</p> ",    "success": {      "examples": [        {          "title": "HTTP1.1 200 Success",          "content": "HTTP1.1 200 Success\n[\n  {\n    \"follow\": \"57f8a82c-1a24-46ef-a670-ee086115e6ed\",\n    \"user\": \"3dee9e50-4d62-44ca-97c0-5c22cf56216c\",\n    \"user_follower\": {\n      \"user\": \"97cbd3c8-9adb-4dbc-86e5-e10c33db10c9\",\n      \"username\": \"ted\",\n      \"altid\": \"3\",\n      \"userdata\": {\n        \"avatar\": \"test.jpg\"\n      }\n    },\n    \"since\": \"2015-09-05T12:52:24.857Z\",\n    \"visibility\": \"public\",\n    \"followerCount\": 1,\n    \"liuIsFollowing\": false,\n    \"liuIsUser\": false\n  },\n  {\n    \"follow\": \"9b1c9482-0fdc-4bc7-9663-a5616c8afead\",\n    \"user\": \"3dee9e50-4d62-44ca-97c0-5c22cf56216c\",\n    \"user_follower\": {\n      \"user\": \"1a63823e-0818-4850-bd3e-7ef76f9a053d\",\n      \"username\": \"phteven\",\n      \"altid\": \"2\",\n      \"userdata\": {\n        \"avatar\": \"test.jpg\"\n      }\n    },\n    \"since\": \"2015-09-05T12:52:24.810Z\",\n    \"visibility\": \"public\",\n    \"followerCount\": 0,\n    \"liuIsFollowing\": false,\n    \"liuIsUser\": false\n  }\n]",          "type": "json"        }      ]    },    "error": {      "fields": {        "4xx": [          {            "group": "4xx",            "optional": false,            "field": "NotFoundError",            "description": "<p>The user was not found.</p> "          }        ],        "5xx": [          {            "group": "5xx",            "optional": false,            "field": "ServerError",            "description": "<p>There was a server problem.</p> "          }        ]      },      "examples": [        {          "title": "Not-Found:",          "content": "HTTP/1.1 404 Not Found\n{\n  'code': 'NotFoundError',\n  'message': 'Could not find that user.'\n}",          "type": "json"        },        {          "title": "Server-Error:",          "content": "HTTP/1.1 500 Server Error\n{\n  'code': 'NotFoundError',\n  'message': 'Something specific about the server error'\n}",          "type": "json"        }      ]    }  },  {    "type": "delete",    "url": "/user/:user/follower/:user_follower",    "title": "Stop following a user.",    "name": "RemoveFollower",    "group": "ApiFollowers",    "version": "1.0.0",    "description": "<p>Removes a follow</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "user",            "description": "<p>the user guid who is currently being followed</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "user_follower",            "description": "<p>the user who will stop following the first user</p> "          }        ]      }    },    "filename": "./server/index.js",    "groupTitle": "Followers",    "groupDescription": "<p>This is a collection of methods that allow you to create and retrieve follows.</p> ",    "success": {      "examples": [        {          "title": "HTTP1.1 200 Success",          "content": "HTTP1.1 200 Success\n{\n  \"status\": \"removed\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "4xx": [          {            "group": "4xx",            "optional": false,            "field": "BadRequestError",            "description": "<p>You did not provide a guid for the user</p> "          }        ],        "5xx": [          {            "group": "5xx",            "optional": false,            "field": "ServerError",            "description": "<p>There was a server problem.</p> "          }        ]      },      "examples": [        {          "title": "Bad-Request:",          "content": "HTTP/1.1 400 Bad Request\n{\n  'code': 'BadRequestError',\n  'message': 'You must provide a user guid.'\n}",          "type": "json"        },        {          "title": "Bad-Request:",          "content": "HTTP/1.1 400 Bad Request\n{\n  'code': 'BadRequestError',\n  'message': 'You must provide a follow guid.'\n}",          "type": "json"        },        {          "title": "Server-Error:",          "content": "HTTP/1.1 500 Server Error\n{\n  'code': 'NotFoundError',\n  'message': 'Something specific about the server error'\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/friend-request/accept",    "title": "Accept a friend request",    "name": "AcceptFriendRequest",    "group": "ApiFriendRequests",    "version": "1.0.0",    "description": "<p>Accepts a friend request.</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "friend_request",            "description": "<p>the guid of the user to become friends with</p> "          }        ]      }    },    "filename": "./server/index.js",    "groupTitle": "Friend Requests",    "groupDescription": "<p>This is a collection of methods that allow you to use the friend request workflow (instead of creating friends automatically).</p> ",    "success": {      "examples": [        {          "title": "HTTP1.1 200 Success",          "content": "HTTP1.1 200 Success\n{\n  \"friend\": \"1bc50328-99d5-44dd-be9d-0d22fc4db3d5\",\n  \"reciprocal\": \"54f9e7a9-282a-41cf-96e1-70ebc80a574a\",\n  \"user\": {\n    \"user\": \"3dee9e50-4d62-44ca-97c0-5c22cf56216c\",\n    \"username\": \"cliftonc\",\n    \"altid\": \"1\",\n    \"userdata\": {\n      \"avatar\": \"test.jpg\"\n    }\n  },\n  \"user_friend\": {\n    \"user\": \"1a63823e-0818-4850-bd3e-7ef76f9a053d\",\n    \"username\": \"phteven\",\n    \"altid\": \"2\",\n    \"userdata\": {\n      \"avatar\": \"test.jpg\"\n    }\n  },\n  \"since\": \"2015-09-05T12:52:24.604Z\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "4xx": [          {            "group": "4xx",            "optional": false,            "field": "BadRequestError",            "description": "<p>You did not provide a guid for the user</p> "          }        ],        "5xx": [          {            "group": "5xx",            "optional": false,            "field": "ServerError",            "description": "<p>There was a server problem.</p> "          }        ]      },      "examples": [        {          "title": "Bad-Request:",          "content": "HTTP/1.1 400 Bad Request\n{\n  'code': 'BadRequestError',\n  'message': 'You must provide a user guid.'\n}",          "type": "json"        },        {          "title": "Bad-Request:",          "content": "HTTP/1.1 400 Bad Request\n{\n  'code': 'BadRequestError',\n  'message': 'You must provide a friend guid.'\n}",          "type": "json"        },        {          "title": "Server-Error:",          "content": "HTTP/1.1 500 Server Error\n{\n  'code': 'NotFoundError',\n  'message': 'Something specific about the server error'\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/friend-request",    "title": "Submit a new friend request",    "name": "AddFriendRequest",    "group": "ApiFriendRequests",    "version": "1.0.0",    "description": "<p>Adds a new friend request.</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "user_friend",            "description": "<p>the guid of the user to become friends with</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>the message to leave</p> "          }        ]      }    },    "filename": "./server/index.js",    "groupTitle": "Friend Requests",    "groupDescription": "<p>This is a collection of methods that allow you to use the friend request workflow (instead of creating friends automatically).</p> ",    "success": {      "examples": [        {          "title": "HTTP1.1 200 Success",          "content": "HTTP1.1 200 Success\n{\n  \"friend_request\": \"944b176a-b8f1-4bce-82a3-4d8676b60241\",\n  \"user\": \"3dee9e50-4d62-44ca-97c0-5c22cf56216c\",\n  \"user_friend\": \"1a63823e-0818-4850-bd3e-7ef76f9a053d\",\n  \"message\": \"Please be my friend\",\n  \"since\": \"2015-09-05T12:52:24.550Z\",\n  \"visibility\": \"private\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "4xx": [          {            "group": "4xx",            "optional": false,            "field": "BadRequestError",            "description": "<p>You did not provide a guid for the user</p> "          }        ],        "5xx": [          {            "group": "5xx",            "optional": false,            "field": "ServerError",            "description": "<p>There was a server problem.</p> "          }        ]      },      "examples": [        {          "title": "Bad-Request:",          "content": "HTTP/1.1 400 Bad Request\n{\n  'code': 'BadRequestError',\n  'message': 'You must provide a user guid.'\n}",          "type": "json"        },        {          "title": "Bad-Request:",          "content": "HTTP/1.1 400 Bad Request\n{\n  'code': 'BadRequestError',\n  'message': 'You must provide a friend guid.'\n}",          "type": "json"        },        {          "title": "Server-Error:",          "content": "HTTP/1.1 500 Server Error\n{\n  'code': 'NotFoundError',\n  'message': 'Something specific about the server error'\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/friend-request/active",    "title": "Get active friend requests",    "name": "GetFriendRequests",    "group": "ApiFriendRequests",    "version": "1.0.0",    "description": "<p>Retrieves active friend Requests for logged in user (inbound and outbound)</p> ",    "filename": "./server/index.js",    "groupTitle": "Friend Requests",    "groupDescription": "<p>This is a collection of methods that allow you to use the friend request workflow (instead of creating friends automatically).</p> ",    "success": {      "examples": [        {          "title": "HTTP1.1 200 Success",          "content": "HTTP1.1 200 Success\n{\n  \"incoming\": [],\n  \"outgoing\": [\n    {\n      \"friend_request\": \"944b176a-b8f1-4bce-82a3-4d8676b60241\",\n      \"user\": {\n        \"user\": \"3dee9e50-4d62-44ca-97c0-5c22cf56216c\",\n        \"username\": \"cliftonc\",\n        \"altid\": \"1\",\n        \"userdata\": {\n          \"avatar\": \"test.jpg\"\n        }\n      },\n      \"user_friend\": {\n        \"user\": \"1a63823e-0818-4850-bd3e-7ef76f9a053d\",\n        \"username\": \"phteven\",\n        \"altid\": \"2\",\n        \"userdata\": {\n          \"avatar\": \"test.jpg\"\n        }\n      },\n      \"message\": \"Please be my friend\",\n      \"since\": \"2015-09-05T12:52:24.550Z\",\n      \"visibility\": \"private\"\n    }\n  ]\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "4xx": [          {            "group": "4xx",            "optional": false,            "field": "NotFoundError",            "description": "<p>The user was not found.</p> "          }        ],        "5xx": [          {            "group": "5xx",            "optional": false,            "field": "ServerError",            "description": "<p>There was a server problem.</p> "          }        ]      },      "examples": [        {          "title": "Not-Found:",          "content": "HTTP/1.1 404 Not Found\n{\n  'code': 'NotFoundError',\n  'message': 'Could not find that user.'\n}",          "type": "json"        },        {          "title": "Server-Error:",          "content": "HTTP/1.1 500 Server Error\n{\n  'code': 'NotFoundError',\n  'message': 'Something specific about the server error'\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/friend/:friend",    "title": "Get friend",    "name": "GetFriend",    "group": "ApiFriends",    "version": "1.0.0",    "description": "<p>Retrieves a specific relationship information</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "user",            "description": "<p>the guid of the user</p> "          }        ]      }    },    "filename": "./server/index.js",    "groupTitle": "ApiFriends",    "success": {      "examples": [        {          "title": "HTTP1.1 200 Success",          "content": "HTTP1.1 200 Success\n{\n  \"friend\": \"1bc50328-99d5-44dd-be9d-0d22fc4db3d5\",\n  \"user\": {\n    \"user\": \"3dee9e50-4d62-44ca-97c0-5c22cf56216c\",\n    \"username\": \"cliftonc\",\n    \"altid\": \"1\",\n    \"userdata\": {\n      \"avatar\": \"test.jpg\"\n    }\n  },\n  \"user_friend\": {\n    \"user\": \"1a63823e-0818-4850-bd3e-7ef76f9a053d\",\n    \"username\": \"phteven\",\n    \"altid\": \"2\",\n    \"userdata\": {\n      \"avatar\": \"test.jpg\"\n    }\n  },\n  \"since\": \"2015-09-05T12:52:24.604Z\",\n  \"visibility\": \"private\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "4xx": [          {            "group": "4xx",            "optional": false,            "field": "NotFoundError",            "description": "<p>The user was not found.</p> "          }        ],        "5xx": [          {            "group": "5xx",            "optional": false,            "field": "ServerError",            "description": "<p>There was a server problem.</p> "          }        ]      },      "examples": [        {          "title": "Not-Found:",          "content": "HTTP/1.1 404 Not Found\n{\n  'code': 'NotFoundError',\n  'message': 'Could not find that user.'\n}",          "type": "json"        },        {          "title": "Server-Error:",          "content": "HTTP/1.1 500 Server Error\n{\n  'code': 'NotFoundError',\n  'message': 'Something specific about the server error'\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/user/:user/friends",    "title": "Get friends for a user",    "name": "GetFriends",    "group": "ApiFriends",    "version": "1.0.0",    "description": "<p>Retrieves a set of friends for a specific user</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "user",            "description": "<p>the guid of the user</p> "          }        ]      }    },    "filename": "./server/index.js",    "groupTitle": "ApiFriends",    "success": {      "examples": [        {          "title": "HTTP1.1 200 Success",          "content": "HTTP1.1 200 Success\n[\n  {\n    \"user_friend\": {\n      \"user\": \"1a63823e-0818-4850-bd3e-7ef76f9a053d\",\n      \"username\": \"phteven\",\n      \"altid\": \"2\",\n      \"userdata\": {\n        \"avatar\": \"test.jpg\"\n      }\n    },\n    \"since\": \"2015-09-05T12:52:24.604Z\"\n  }\n]",          "type": "json"        }      ]    },    "error": {      "fields": {        "4xx": [          {            "group": "4xx",            "optional": false,            "field": "NotFoundError",            "description": "<p>The user was not found.</p> "          }        ],        "5xx": [          {            "group": "5xx",            "optional": false,            "field": "ServerError",            "description": "<p>There was a server problem.</p> "          }        ]      },      "examples": [        {          "title": "Not-Found:",          "content": "HTTP/1.1 404 Not Found\n{\n  'code': 'NotFoundError',\n  'message': 'Could not find that user.'\n}",          "type": "json"        },        {          "title": "Server-Error:",          "content": "HTTP/1.1 500 Server Error\n{\n  'code': 'NotFoundError',\n  'message': 'Something specific about the server error'\n}",          "type": "json"        }      ]    }  },  {    "type": "delete",    "url": "/user/:user/friend/:user_friend",    "title": "Remove a friendship.",    "name": "RemoveFriend",    "group": "ApiFriends",    "version": "1.0.0",    "description": "<p>Removes a friendship (both sides)</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "user",            "description": "<p>the guid representation of the user</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "user_friend",            "description": "<p>the guid representation of the user they dont want to be friends with</p> "          }        ]      }    },    "filename": "./server/index.js",    "groupTitle": "ApiFriends",    "success": {      "examples": [        {          "title": "HTTP1.1 200 Success",          "content": "HTTP1.1 200 Success\n{\n  \"status\": \"removed\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "4xx": [          {            "group": "4xx",            "optional": false,            "field": "BadRequestError",            "description": "<p>You did not provide a guid for the user</p> "          }        ],        "5xx": [          {            "group": "5xx",            "optional": false,            "field": "ServerError",            "description": "<p>There was a server problem.</p> "          }        ]      },      "examples": [        {          "title": "Bad-Request:",          "content": "HTTP/1.1 400 Bad Request\n{\n  'code': 'BadRequestError',\n  'message': 'You must provide a user guid.'\n}",          "type": "json"        },        {          "title": "Bad-Request:",          "content": "HTTP/1.1 400 Bad Request\n{\n  'code': 'BadRequestError',\n  'message': 'You must provide a friend guid.'\n}",          "type": "json"        },        {          "title": "Server-Error:",          "content": "HTTP/1.1 500 Server Error\n{\n  'code': 'NotFoundError',\n  'message': 'Something specific about the server error'\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/like",    "title": "Add a like by a user",    "name": "AddLike",    "group": "ApiLikes",    "version": "1.0.0",    "description": "<p>Creates a new like of an item</p> ",    "examples": [      {        "title": "Example usage:",        "content": "curl --data 'user=405d7e5e-c028-449c-abad-9c11d8569b8f&item=github.com' http://localhost:3000/like",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Guid</p> ",            "optional": false,            "field": "user",            "description": "<p>the guid representation of the user</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "item",            "description": "<p>a canonical url to the item liked</p> "          }        ]      }    },    "filename": "./server/index.js",    "groupTitle": "Likes",    "groupDescription": "<p>This is a collection of methods that allow you to create and retrieve likes.</p> ",    "success": {      "examples": [        {          "title": "HTTP1.1 200 Success",          "content": "HTTP1.1 200 Success\n{\n  \"like\": \"e9cca9a0-7551-4a91-a1b0-51f9218c89d1\",\n  \"user\": {\n    \"user\": \"3dee9e50-4d62-44ca-97c0-5c22cf56216c\",\n    \"username\": \"cliftonc\",\n    \"altid\": \"1\",\n    \"userdata\": {\n      \"avatar\": \"test.jpg\"\n    }\n  },\n  \"item\": \"http%3A%2F%2Fgithub.com\",\n  \"since\": \"2015-09-05T12:52:25.296Z\",\n  \"visibility\": \"public\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "4xx": [          {            "group": "4xx",            "optional": false,            "field": "BadRequestError",            "description": "<p>You did not provide a username</p> "          },          {            "group": "4xx",            "optional": false,            "field": "NotFoundError",            "description": "<p>The user was not found.</p> "          }        ],        "5xx": [          {            "group": "5xx",            "optional": false,            "field": "ServerError",            "description": "<p>There was a server problem.</p> "          }        ]      },      "examples": [        {          "title": "Bad-Request:",          "content": "HTTP/1.1 400 Bad Request\n{\n  'code': 'BadRequestError',\n  'message': 'You must provide a username.'\n}",          "type": "json"        },        {          "title": "Bad-Request:",          "content": "HTTP/1.1 400 Bad Request\n{\n  'code': 'BadRequestError',\n  'message': 'You must provide an item.'\n}",          "type": "json"        },        {          "title": "Not-Found:",          "content": "HTTP/1.1 404 Not Found\n{\n  'code': 'NotFoundError',\n  'message': 'Could not find that user.'\n}",          "type": "json"        },        {          "title": "Server-Error:",          "content": "HTTP/1.1 500 Server Error\n{\n  'code': 'NotFoundError',\n  'message': 'Something specific about the server error'\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/user/:user/like/:item",    "title": "Check a specific like",    "name": "CheckLike",    "group": "ApiLikes",    "version": "1.0.0",    "description": "<p>Checks if a user likes a specific item, typically the item is a canonical url.</p> ",    "examples": [      {        "title": "Example usage:",        "content": "curl -i http://localhost:3000/like/405d7e5e-c028-449c-abad-9c11d8569b8f/github.com",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Guid</p> ",            "optional": false,            "field": "user",            "description": "<p>The guid of the user</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "item",            "description": "<p>The item to check</p> "          }        ]      }    },    "filename": "./server/index.js",    "groupTitle": "Likes",    "groupDescription": "<p>This is a collection of methods that allow you to create and retrieve likes.</p> ",    "success": {      "examples": [        {          "title": "HTTP1.1 200 Success",          "content": "HTTP1.1 200 Success\n{\n  \"like\": \"e9cca9a0-7551-4a91-a1b0-51f9218c89d1\",\n  \"user\": {\n    \"user\": \"3dee9e50-4d62-44ca-97c0-5c22cf56216c\",\n    \"username\": \"cliftonc\",\n    \"altid\": \"1\",\n    \"userdata\": {\n      \"avatar\": \"test.jpg\"\n    }\n  },\n  \"since\": \"2015-09-05T12:52:25.296Z\",\n  \"visibility\": \"public\",\n  \"userLikes\": true,\n  \"count\": 1\n}",          "type": "json"        },        {          "title": "HTTP1.1 200 Success",          "content": "HTTP1.1 200 Success\n{\n  \"userLikes\": false,\n  \"user\": {\n    \"user\": \"3dee9e50-4d62-44ca-97c0-5c22cf56216c\",\n    \"username\": \"cliftonc\",\n    \"altid\": \"1\",\n    \"userdata\": {\n      \"avatar\": \"test.jpg\"\n    }\n  },\n  \"count\": 0\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "4xx": [          {            "group": "4xx",            "optional": false,            "field": "NotFoundError",            "description": "<p>The user was not found.</p> "          }        ],        "5xx": [          {            "group": "5xx",            "optional": false,            "field": "ServerError",            "description": "<p>There was a server problem.</p> "          }        ]      },      "examples": [        {          "title": "Not-Found:",          "content": "HTTP/1.1 404 Not Found\n{\n  'code': 'NotFoundError',\n  'message': 'Could not find that user.'\n}",          "type": "json"        },        {          "title": "Server-Error:",          "content": "HTTP/1.1 500 Server Error\n{\n  'code': 'NotFoundError',\n  'message': 'Something specific about the server error'\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/like/:like",    "title": "Get a specific like",    "name": "GetLike",    "group": "ApiLikes",    "version": "1.0.0",    "description": "<p>Retrieves details of a specific like</p> ",    "examples": [      {        "title": "Example usage:",        "content": "curl -i http://localhost:3000/like/405d7e5e-c028-449c-abad-9c11d8569b8f/github.com",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Guid</p> ",            "optional": false,            "field": "post",            "description": "<p>The guid of the like</p> "          }        ]      }    },    "filename": "./server/index.js",    "groupTitle": "Likes",    "groupDescription": "<p>This is a collection of methods that allow you to create and retrieve likes.</p> ",    "success": {      "examples": [        {          "title": "HTTP1.1 200 Success",          "content": "HTTP1.1 200 Success\n{\n  \"like\": \"e9cca9a0-7551-4a91-a1b0-51f9218c89d1\",\n  \"item\": \"http%3A%2F%2Fgithub.com\",\n  \"user\": {\n    \"user\": \"3dee9e50-4d62-44ca-97c0-5c22cf56216c\",\n    \"username\": \"cliftonc\",\n    \"altid\": \"1\",\n    \"userdata\": {\n      \"avatar\": \"test.jpg\"\n    }\n  },\n  \"since\": \"2015-09-05T12:52:25.296Z\",\n  \"visibility\": \"public\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "5xx": [          {            "group": "5xx",            "optional": false,            "field": "ServerError",            "description": "<p>There was a server problem.</p> "          }        ]      },      "examples": [        {          "title": "Server-Error:",          "content": "HTTP/1.1 500 Server Error\n{\n  'code': 'NotFoundError',\n  'message': 'Something specific about the server error'\n}",          "type": "json"        }      ]    }  },  {    "type": "delete",    "url": "/user/:user/like/:item",    "title": "Remove a like.",    "name": "RemoveLike",    "group": "ApiLikes",    "version": "1.0.0",    "description": "<p>Removes a like</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Guid</p> ",            "optional": false,            "field": "user",            "description": "<p>The guid of the user</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "item",            "description": "<p>The item to check</p> "          }        ]      }    },    "filename": "./server/index.js",    "groupTitle": "Likes",    "groupDescription": "<p>This is a collection of methods that allow you to create and retrieve likes.</p> ",    "success": {      "examples": [        {          "title": "HTTP1.1 200 Success",          "content": "HTTP1.1 200 Success\n{\n  \"status\": \"removed\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "4xx": [          {            "group": "4xx",            "optional": false,            "field": "NotFoundError",            "description": "<p>The user was not found.</p> "          }        ],        "5xx": [          {            "group": "5xx",            "optional": false,            "field": "ServerError",            "description": "<p>There was a server problem.</p> "          }        ]      },      "examples": [        {          "title": "Not-Found:",          "content": "HTTP/1.1 404 Not Found\n{\n  'code': 'NotFoundError',\n  'message': 'Could not find that user.'\n}",          "type": "json"        },        {          "title": "Server-Error:",          "content": "HTTP/1.1 500 Server Error\n{\n  'code': 'NotFoundError',\n  'message': 'Something specific about the server error'\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/post",    "title": "Add a post by a user",    "name": "AddPost",    "group": "ApiPosts",    "version": "1.0.0",    "description": "<p>Creates a new post, by default all new posts are public, and so can be seen by all users.</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "user",            "description": "<p>of the user</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "content",            "description": "<p>of the post</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "content_type",            "description": "<p>the type of content in content, use application/json for json data, defaults to text/html</p> "          },          {            "group": "Parameter",            "type": "<p>Timestamp</p> ",            "optional": false,            "field": "posted",            "description": "<p>the timestamp that the post occurred - default Date.now()</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "visibility",            "description": "<p>is the post private, e.g. only for friends</p> "          }        ]      }    },    "filename": "./server/index.js",    "groupTitle": "Posts",    "groupDescription": "<p>This is a collection of methods that allow you to create and retrieve posts.</p> ",    "success": {      "examples": [        {          "title": "HTTP1.1 200 Success",          "content": "HTTP1.1 200 Success\n{\n  \"post\": \"3a0ee577-239f-42e1-ad2e-b5206878bea9\",\n  \"user\": {\n    \"user\": \"b60490c5-ac89-4d53-940e-0959a390dcf1\",\n    \"username\": \"new_name\",\n    \"altid\": \"new_altid\",\n    \"userdata\": {\n      \"hello\": \"world\"\n    }\n  },\n  \"content\": {\n    \"hello\": \"world\"\n  },\n  \"content_type\": \"application/json\",\n  \"posted\": \"2015-09-05T12:52:25.172Z\",\n  \"visibility\": \"public\",\n  \"altid\": null\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "4xx": [          {            "group": "4xx",            "optional": false,            "field": "BadRequestError",            "description": "<p>You did not provide a guid for the user</p> "          }        ],        "5xx": [          {            "group": "5xx",            "optional": false,            "field": "ServerError",            "description": "<p>There was a server problem.</p> "          }        ]      },      "examples": [        {          "title": "Bad-Request:",          "content": "HTTP/1.1 400 Bad Request\n{\n  'code': 'BadRequestError',\n  'message': 'You must provide a user guid.'\n}",          "type": "json"        },        {          "title": "Bad-Request:",          "content": "HTTP/1.1 400 Bad Request\n{\n  'code': 'BadRequestError',\n  'message': 'You must provide content for the post.'\n}",          "type": "json"        },        {          "title": "Server-Error:",          "content": "HTTP/1.1 500 Server Error\n{\n  'code': 'NotFoundError',\n  'message': 'Something specific about the server error'\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/post/:post",    "title": "Get a specific post",    "name": "GetPost",    "group": "ApiPosts",    "version": "1.0.0",    "description": "<p>Retrieves details of a specific post</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Guid</p> ",            "optional": false,            "field": "post",            "description": "<p>The guid of the post</p> "          }        ]      }    },    "filename": "./server/index.js",    "groupTitle": "Posts",    "groupDescription": "<p>This is a collection of methods that allow you to create and retrieve posts.</p> ",    "success": {      "examples": [        {          "title": "HTTP1.1 200 Success",          "content": "HTTP1.1 200 Success\n{\n  \"post\": \"88c1de8e-143d-4995-ada3-bd106cba1547\",\n  \"content\": \"Hello, this is a post\",\n  \"content_type\": \"text/html\",\n  \"user\": {\n    \"user\": \"3dee9e50-4d62-44ca-97c0-5c22cf56216c\",\n    \"username\": \"cliftonc\",\n    \"altid\": \"1\",\n    \"userdata\": {\n      \"avatar\": \"test.jpg\"\n    }\n  },\n  \"posted\": \"2015-09-05T12:52:25.030Z\",\n  \"visibility\": \"public\",\n  \"altid\": \"ALTID\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "5xx": [          {            "group": "5xx",            "optional": false,            "field": "ServerError",            "description": "<p>There was a server problem.</p> "          }        ]      },      "examples": [        {          "title": "Server-Error:",          "content": "HTTP/1.1 500 Server Error\n{\n  'code': 'NotFoundError',\n  'message': 'Something specific about the server error'\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/post/:altid/altid",    "title": "Get a specific post by altid",    "name": "GetPostByAltid",    "group": "ApiPosts",    "version": "1.0.0",    "description": "<p>Retrieves details of a specific post by altid</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "altid",            "description": "<p>The altid of the post</p> "          }        ]      }    },    "filename": "./server/index.js",    "groupTitle": "Posts",    "groupDescription": "<p>This is a collection of methods that allow you to create and retrieve posts.</p> ",    "success": {      "examples": [        {          "title": "HTTP1.1 200 Success",          "content": "HTTP1.1 200 Success\n{\n  \"post\": \"88c1de8e-143d-4995-ada3-bd106cba1547\",\n  \"content\": \"Hello, this is a post\",\n  \"content_type\": \"text/html\",\n  \"user\": {\n    \"user\": \"3dee9e50-4d62-44ca-97c0-5c22cf56216c\",\n    \"username\": \"cliftonc\",\n    \"altid\": \"1\",\n    \"userdata\": {\n      \"avatar\": \"test.jpg\"\n    }\n  },\n  \"posted\": \"2015-09-05T12:52:25.030Z\",\n  \"visibility\": \"public\",\n  \"altid\": \"ALTID\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "5xx": [          {            "group": "5xx",            "optional": false,            "field": "ServerError",            "description": "<p>There was a server problem.</p> "          }        ]      },      "examples": [        {          "title": "Server-Error:",          "content": "HTTP/1.1 500 Server Error\n{\n  'code': 'NotFoundError',\n  'message': 'Something specific about the server error'\n}",          "type": "json"        }      ]    }  },  {    "type": "delete",    "url": "/post/:post",    "title": "Remove a post.",    "name": "RemovePost",    "group": "ApiPosts",    "version": "1.0.0",    "description": "<p>Removes a post</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "post",            "description": "<p>the guid representation of the post</p> "          }        ]      }    },    "filename": "./server/index.js",    "groupTitle": "Posts",    "groupDescription": "<p>This is a collection of methods that allow you to create and retrieve posts.</p> ",    "success": {      "examples": [        {          "title": "HTTP1.1 200 Success",          "content": "HTTP1.1 200 Success\n{\n  \"status\": \"removed\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "4xx": [          {            "group": "4xx",            "optional": false,            "field": "BadRequestError",            "description": "<p>You did not provide a post guid</p> "          }        ],        "5xx": [          {            "group": "5xx",            "optional": false,            "field": "ServerError",            "description": "<p>There was a server problem.</p> "          }        ]      },      "examples": [        {          "title": "Bad-Request:",          "content": "HTTP/1.1 400 Bad Request\n{\n  'code': 'BadRequestError',\n  'message': 'You must provide a post guid.'\n}",          "type": "json"        },        {          "title": "Server-Error:",          "content": "HTTP/1.1 500 Server Error\n{\n  'code': 'NotFoundError',\n  'message': 'Something specific about the server error'\n}",          "type": "json"        }      ]    }  },  {    "type": "delete",    "url": "/post/:altid/altid",    "title": "Remove a post by altid",    "name": "RemovePostByAltid",    "group": "ApiPosts",    "version": "1.0.0",    "description": "<p>Removes a post by altid</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "post",            "description": "<p>the altid representation of the post</p> "          }        ]      }    },    "filename": "./server/index.js",    "groupTitle": "Posts",    "groupDescription": "<p>This is a collection of methods that allow you to create and retrieve posts.</p> ",    "success": {      "examples": [        {          "title": "HTTP1.1 200 Success",          "content": "HTTP1.1 200 Success\n{\n  \"status\": \"removed\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "4xx": [          {            "group": "4xx",            "optional": false,            "field": "BadRequestError",            "description": "<p>You did not provide a post guid</p> "          }        ],        "5xx": [          {            "group": "5xx",            "optional": false,            "field": "ServerError",            "description": "<p>There was a server problem.</p> "          }        ]      },      "examples": [        {          "title": "Bad-Request:",          "content": "HTTP/1.1 400 Bad Request\n{\n  'code': 'BadRequestError',\n  'message': 'You must provide a post guid.'\n}",          "type": "json"        },        {          "title": "Server-Error:",          "content": "HTTP/1.1 500 Server Error\n{\n  'code': 'NotFoundError',\n  'message': 'Something specific about the server error'\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/post/:post",    "title": "Update a post by a user",    "name": "UpdatePost",    "group": "ApiPosts",    "version": "1.0.0",    "description": "<p>Updates a post.</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Guid</p> ",            "optional": false,            "field": "post",            "description": "<p>the guid for the post</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "content",            "description": "<p>of the post</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "content_type",            "description": "<p>the type of content in content, use application/json for json data, defaults to text/html</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "private",            "description": "<p>is the post private, e.g. only for friends</p> "          }        ]      }    },    "filename": "./server/index.js",    "groupTitle": "Posts",    "groupDescription": "<p>This is a collection of methods that allow you to create and retrieve posts.</p> ",    "success": {      "examples": [        {          "title": "HTTP1.1 200 Success",          "content": "HTTP1.1 200 Success\n{\n  \"status\": \"updated\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "4xx": [          {            "group": "4xx",            "optional": false,            "field": "BadRequestError",            "description": "<p>You did not provide a guid for the user</p> "          }        ],        "5xx": [          {            "group": "5xx",            "optional": false,            "field": "ServerError",            "description": "<p>There was a server problem.</p> "          }        ]      },      "examples": [        {          "title": "Bad-Request:",          "content": "HTTP/1.1 400 Bad Request\n{\n  'code': 'BadRequestError',\n  'message': 'You must provide a user guid.'\n}",          "type": "json"        },        {          "title": "Bad-Request:",          "content": "HTTP/1.1 400 Bad Request\n{\n  'code': 'BadRequestError',\n  'message': 'You must provide content for the post.'\n}",          "type": "json"        },        {          "title": "Server-Error:",          "content": "HTTP/1.1 500 Server Error\n{\n  'code': 'NotFoundError',\n  'message': 'Something specific about the server error'\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/post/:altid/altid",    "title": "Update a post by a user by altid",    "name": "UpdatePostByAltid",    "group": "ApiPosts",    "version": "1.0.0",    "description": "<p>Updates a post by altid</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "altid",            "description": "<p>the altid for the post</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "content",            "description": "<p>of the post</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "content_type",            "description": "<p>the type of content in content, use application/json for json data, defaults to text/html</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "private",            "description": "<p>is the post private, e.g. only for friends</p> "          }        ]      }    },    "filename": "./server/index.js",    "groupTitle": "Posts",    "groupDescription": "<p>This is a collection of methods that allow you to create and retrieve posts.</p> ",    "success": {      "examples": [        {          "title": "HTTP1.1 200 Success",          "content": "HTTP1.1 200 Success\n{\n  \"status\": \"updated\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "4xx": [          {            "group": "4xx",            "optional": false,            "field": "BadRequestError",            "description": "<p>You did not provide a guid for the user</p> "          }        ],        "5xx": [          {            "group": "5xx",            "optional": false,            "field": "ServerError",            "description": "<p>There was a server problem.</p> "          }        ]      },      "examples": [        {          "title": "Bad-Request:",          "content": "HTTP/1.1 400 Bad Request\n{\n  'code': 'BadRequestError',\n  'message': 'You must provide a user guid.'\n}",          "type": "json"        },        {          "title": "Bad-Request:",          "content": "HTTP/1.1 400 Bad Request\n{\n  'code': 'BadRequestError',\n  'message': 'You must provide content for the post.'\n}",          "type": "json"        },        {          "title": "Server-Error:",          "content": "HTTP/1.1 500 Server Error\n{\n  'code': 'NotFoundError',\n  'message': 'Something specific about the server error'\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/username/:username",    "title": "Get a specific user",    "name": "GetUser",    "group": "ApiUsers",    "version": "1.0.0",    "description": "<p>Retrieves details of a specific user</p> ",    "examples": [      {        "title": "Example usage:",        "content": "curl -i http://localhost:3000/username/cliftonc",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "username",            "description": "<p>The name of the user</p> "          }        ]      }    },    "filename": "./server/index.js",    "groupTitle": "Users",    "groupDescription": "<p>This is a collection of methods that allow you to create and retrieve users.</p> ",    "success": {      "examples": [        {          "title": "HTTP1.1 200 Success",          "content": "HTTP1.1 200 Success\n{\n  \"user\": \"22f8964d-d58a-4f99-ae45-260bc1efafd6\",\n  \"username\": \"evil &user <alert>name</alert>\",\n  \"altid\": \"9\",\n  \"userdata\": {\n    \"avatar\": \"test.jpg\"\n  }\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "4xx": [          {            "group": "4xx",            "optional": false,            "field": "NotFoundError",            "description": "<p>The user was not found.</p> "          }        ],        "5xx": [          {            "group": "5xx",            "optional": false,            "field": "ServerError",            "description": "<p>There was a server problem.</p> "          }        ]      },      "examples": [        {          "title": "Not-Found:",          "content": "HTTP/1.1 404 Not Found\n{\n  'code': 'NotFoundError',\n  'message': 'Could not find that user.'\n}",          "type": "json"        },        {          "title": "Server-Error:",          "content": "HTTP/1.1 500 Server Error\n{\n  'code': 'NotFoundError',\n  'message': 'Something specific about the server error'\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/useraltid/:id",    "title": "Get a specific user by altid",    "name": "GetUser",    "group": "ApiUsers",    "version": "1.0.0",    "description": "<p>Retrieves details of a specific user by altid</p> ",    "examples": [      {        "title": "Example usage:",        "content": "curl -i http://localhost:3000/useraltid/1234",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "id",            "description": "<p>The alternate id of the user as a string</p> "          }        ]      }    },    "filename": "./server/index.js",    "groupTitle": "Users",    "groupDescription": "<p>This is a collection of methods that allow you to create and retrieve users.</p> ",    "success": {      "examples": [        {          "title": "HTTP1.1 200 Success",          "content": "HTTP1.1 200 Success\n{\n  \"user\": \"3dee9e50-4d62-44ca-97c0-5c22cf56216c\",\n  \"username\": \"cliftonc\",\n  \"altid\": \"1\",\n  \"userdata\": {\n    \"avatar\": \"test.jpg\"\n  }\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "4xx": [          {            "group": "4xx",            "optional": false,            "field": "NotFoundError",            "description": "<p>The user was not found.</p> "          }        ],        "5xx": [          {            "group": "5xx",            "optional": false,            "field": "ServerError",            "description": "<p>There was a server problem.</p> "          }        ]      },      "examples": [        {          "title": "Not-Found:",          "content": "HTTP/1.1 404 Not Found\n{\n  'code': 'NotFoundError',\n  'message': 'Could not find that user.'\n}",          "type": "json"        },        {          "title": "Server-Error:",          "content": "HTTP/1.1 500 Server Error\n{\n  'code': 'NotFoundError',\n  'message': 'Something specific about the server error'\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/user/:id",    "title": "Get a specific user by id",    "name": "GetUser",    "group": "ApiUsers",    "version": "1.0.0",    "description": "<p>Retrieves details of a specific user by id</p> ",    "examples": [      {        "title": "Example usage:",        "content": "curl -i http://localhost:3000/user/cbeab41d-2372-4017-ac50-d8d63802d452",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "user",            "description": "<p>The id of the user</p> "          }        ]      }    },    "filename": "./server/index.js",    "groupTitle": "Users",    "groupDescription": "<p>This is a collection of methods that allow you to create and retrieve users.</p> ",    "success": {      "examples": [        {          "title": "HTTP1.1 200 Success",          "content": "HTTP1.1 200 Success\n{\n  \"user\": \"3dee9e50-4d62-44ca-97c0-5c22cf56216c\",\n  \"username\": \"cliftonc\",\n  \"altid\": \"1\",\n  \"userdata\": {\n    \"avatar\": \"test.jpg\"\n  }\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "4xx": [          {            "group": "4xx",            "optional": false,            "field": "NotFoundError",            "description": "<p>The user was not found.</p> "          }        ],        "5xx": [          {            "group": "5xx",            "optional": false,            "field": "ServerError",            "description": "<p>There was a server problem.</p> "          }        ]      },      "examples": [        {          "title": "Not-Found:",          "content": "HTTP/1.1 404 Not Found\n{\n  'code': 'NotFoundError',\n  'message': 'Could not find that user.'\n}",          "type": "json"        },        {          "title": "Server-Error:",          "content": "HTTP/1.1 500 Server Error\n{\n  'code': 'NotFoundError',\n  'message': 'Something specific about the server error'\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/user/:id/relationship",    "title": "Get details of a relationship",    "name": "GetUserRelationship",    "group": "ApiUsers",    "version": "1.0.0",    "description": "<p>Retrieves details of a specific user relationship with the current logged in user, intended to be used when viewing someone elses profile.</p> ",    "examples": [      {        "title": "Example usage:",        "content": "curl -i http://localhost:3000/user/cbeab41d-2372-4017-ac50-d8d63802d452/relationship",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "user",            "description": "<p>The id of the user</p> "          }        ]      }    },    "filename": "./server/index.js",    "groupTitle": "Users",    "groupDescription": "<p>This is a collection of methods that allow you to create and retrieve users.</p> ",    "success": {      "examples": [        {          "title": "HTTP1.1 200 Success",          "content": "HTTP1.1 200 Success\n{\n  \"isFriend\": true,\n  \"isFriendSince\": \"2015-09-05T12:52:24.604Z\",\n  \"isFriendRequestPending\": false,\n  \"isFriendRequestSince\": null,\n  \"youFollow\": false,\n  \"youFollowSince\": null,\n  \"youFollowPrivate\": false,\n  \"youFollowPersonal\": false,\n  \"theyFollow\": true,\n  \"theyFollowSince\": \"2015-09-05T12:52:24.810Z\",\n  \"theyFollowVisibility\": \"public\",\n  \"theyFollowPrivate\": false,\n  \"theyFollowPersonal\": false,\n  \"inCommon\": [],\n  \"followerCount\": 0\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "4xx": [          {            "group": "4xx",            "optional": false,            "field": "NotFoundError",            "description": "<p>The user was not found.</p> "          }        ],        "5xx": [          {            "group": "5xx",            "optional": false,            "field": "ServerError",            "description": "<p>There was a server problem.</p> "          }        ]      },      "examples": [        {          "title": "Not-Found:",          "content": "HTTP/1.1 404 Not Found\n{\n  'code': 'NotFoundError',\n  'message': 'Could not find that user.'\n}",          "type": "json"        },        {          "title": "Server-Error:",          "content": "HTTP/1.1 500 Server Error\n{\n  'code': 'NotFoundError',\n  'message': 'Something specific about the server error'\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/user",    "title": "Add a user",    "name": "Users",    "group": "ApiUsers",    "version": "1.0.0",    "description": "<p>Creates a new user.</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "username",            "description": "<p>the name of the user</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "altid",            "description": "<p>the alternate ID of the user</p> "          },          {            "group": "Parameter",            "type": "<p>Object</p> ",            "optional": false,            "field": "userdata",            "description": "<p>arbitrary user data</p> "          },          {            "group": "Parameter",            "type": "<p>Object</p> ",            "optional": false,            "field": "initialise",            "description": "<p>initialisation command</p> "          }        ]      },      "examples": [        {          "title": "userdata",          "content": "{\n       avatar: '/image/1.jpg',\n       fullName: 'Clifton Cunningham'\n     }",          "type": "json"        },        {          "title": "initialise",          "content": "{\n       follow: {\n         users: ['bob', 'cliftonc'],\n         backfill: '1d',\n         visibility: 'personal'\n       }\n     }",          "type": "json"        }      ]    },    "examples": [      {        "title": "Example usage:",        "content": "curl --data 'username=cliftonc' http://localhost:3000/user",        "type": "curl"      }    ],    "filename": "./server/index.js",    "groupTitle": "Users",    "groupDescription": "<p>This is a collection of methods that allow you to create and retrieve users.</p> ",    "error": {      "fields": {        "4xx": [          {            "group": "4xx",            "optional": false,            "field": "BadRequestError",            "description": "<p>You did not provide a username</p> "          }        ],        "5xx": [          {            "group": "5xx",            "optional": false,            "field": "ServerError",            "description": "<p>There was a server problem.</p> "          }        ]      },      "examples": [        {          "title": "Bad-Request:",          "content": "HTTP/1.1 400 Bad Request\n{\n  'code': 'BadRequestError',\n  'message': 'You must provide a username.'\n}",          "type": "json"        },        {          "title": "Server-Error:",          "content": "HTTP/1.1 500 Server Error\n{\n  'code': 'NotFoundError',\n  'message': 'Something specific about the server error'\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "HTTP1.1 200 Success",          "content": "HTTP1.1 200 Success\n{\n  \"user\": \"3dee9e50-4d62-44ca-97c0-5c22cf56216c\",\n  \"username\": \"cliftonc\",\n  \"altid\": \"1\",\n  \"userdata\": {\n    \"avatar\": \"test.jpg\"\n  }\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/user/:user",    "title": "Update a user",    "name": "Users",    "group": "ApiUsers",    "version": "1.0.0",    "description": "<p>Updates a user.</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "user",            "description": "<p>the guid or altid of the user</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "username",            "description": "<p>the name of the user</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "altid",            "description": "<p>the alternate ID of the user</p> "          },          {            "group": "Parameter",            "type": "<p>Object</p> ",            "optional": false,            "field": "userdata",            "description": "<p>arbitrary user data</p> "          }        ]      }    },    "filename": "./server/index.js",    "groupTitle": "Users",    "groupDescription": "<p>This is a collection of methods that allow you to create and retrieve users.</p> ",    "error": {      "fields": {        "4xx": [          {            "group": "4xx",            "optional": false,            "field": "BadRequestError",            "description": "<p>You did not provide a username</p> "          }        ],        "5xx": [          {            "group": "5xx",            "optional": false,            "field": "ServerError",            "description": "<p>There was a server problem.</p> "          }        ]      },      "examples": [        {          "title": "Bad-Request:",          "content": "HTTP/1.1 400 Bad Request\n{\n  'code': 'BadRequestError',\n  'message': 'You must provide a username.'\n}",          "type": "json"        },        {          "title": "Server-Error:",          "content": "HTTP/1.1 500 Server Error\n{\n  'code': 'NotFoundError',\n  'message': 'Something specific about the server error'\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "HTTP1.1 200 Success",          "content": "HTTP1.1 200 Success\n{\n  \"user\": \"b60490c5-ac89-4d53-940e-0959a390dcf1\",\n  \"username\": \"new_name\",\n  \"altid\": \"new_altid\",\n  \"userdata\": {\n    \"hello\": \"world\"\n  }\n}",          "type": "json"        }      ]    }  }]